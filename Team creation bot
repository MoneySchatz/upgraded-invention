import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler

# Load the data into a Pandas DataFrame
df = pd.read_csv('pokemon_data.csv')

# Preprocess the data
df.dropna(inplace=True)
scaler = MinMaxScaler()
df[['stats_total', 'speed', 'special_defense', 'special_attack', 'defense', 'attack', 'hp']] = scaler.fit_transform(df[['stats_total', 'speed', 'special_defense', 'special_attack', 'defense', 'attack', 'hp']])

# Split the data into a training set and a test set
X = df.drop(columns=['team_win_percentage'])
y = df['team_win_percentage']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Train a random forest regressor model
model = RandomForestRegressor(n_estimators=100)
model.fit(X_train, y_train)

# Evaluate the model's performance on the test set
score = model.score(X_test, y_test)
print(f'Test score: {score:.2f}')
